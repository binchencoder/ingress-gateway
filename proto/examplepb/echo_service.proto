syntax = "proto3";

option go_package = "github.com/binchencoder/janus-gateway/gateway/proto/examplepb";

package grpc.gateway.proto.examplepb;

option java_package = "com.binchencoder.janusgw.examplepb";
option java_outer_classname = "ExamplesProto";

// import "google/api/annotations.proto";
import "httpoptions/annotations.proto";

// Embedded represents a message embedded in SimpleMessage.
message Embedded {
	oneof mark {
		int64 progress = 1;
		string note = 2;
	}
}

// SimpleMessage represents a simple message sent to the Echo service.
message SimpleMessage {
	// Id represents the message identifier.
    string id = 1 
    [
        (janus.api.rules) = {
            rules: {
                type: STRING,
                operator: NON_NIL,
            },
            rules: {
                type: STRING,
                function: TRIM,
                operator: LEN_GT,
                value: "2",
            },
            rules: {
                type: STRING,
                function: TRIM,
                operator: LEN_LT,
                value: "61",
            }
        }
    ];
    int64 num = 2 
    [
        (janus.api.rules) = {
            rules: {
                type: NUMBER,
                operator: GT,
                value: "0",
            }
        }
    ];
	oneof code {
		int64 line_num = 3;
		string lang = 4;
	}
	Embedded status = 5;
	oneof ext {
		int64 en = 6;
		Embedded no = 7;
	}
}

// Echo service responds to incoming echo requests.
service EchoService {
    option (janus.api.service_spec) = {
        service_id: CUSTOM_JANUS_GATEWAY_TEST
        port_name : "grpc"
        namespace : "default"
        gen_controller: true
    };

	// Echo method receives a simple message and returns it.
	//
	// The message posted as the id parameter will also be
	// returned.
	rpc Echo(SimpleMessage) returns (SimpleMessage) {
		option (janus.api.http) = {
			post: "/v1/example/echo/{id}"
			additional_bindings {
				get: "/v1/example/echo/{id}/{num}"
			}
			additional_bindings {
				get: "/v1/example/echo/{id}/{num}/{lang}"
			}
			additional_bindings {
				get: "/v1/example/echo1/{id}/{line_num}/{status.note}"
			}
			additional_bindings {
				get: "/v1/example/echo2/{no.note}"
			}
		};
	}
	// EchoBody method receives a simple message and returns it.
	rpc EchoBody(SimpleMessage) returns (SimpleMessage) {
		option (janus.api.http) = {
			post: "/v1/example/echo_body"
			body: "*"
		};
	}
	// EchoDelete method receives a simple message and returns it.
	rpc EchoDelete(SimpleMessage) returns (SimpleMessage) {
		option (janus.api.http) = {
			delete: "/v1/example/echo_delete"
		};
	}
}
