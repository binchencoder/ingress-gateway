// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: httpoptions/annotations.proto

package annotations

import (
	data "github.com/binchencoder/gateway-proto/data"
	_ "github.com/binchencoder/gateway-proto/frontend"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApiSourceType int32

const (
	ApiSourceType_EASE_GATEWAY ApiSourceType = 0
	ApiSourceType_OPEN_GATEWAY ApiSourceType = 1
)

// Enum value maps for ApiSourceType.
var (
	ApiSourceType_name = map[int32]string{
		0: "EASE_GATEWAY",
		1: "OPEN_GATEWAY",
	}
	ApiSourceType_value = map[string]int32{
		"EASE_GATEWAY": 0,
		"OPEN_GATEWAY": 1,
	}
)

func (x ApiSourceType) Enum() *ApiSourceType {
	p := new(ApiSourceType)
	*p = x
	return p
}

func (x ApiSourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiSourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_httpoptions_annotations_proto_enumTypes[0].Descriptor()
}

func (ApiSourceType) Type() protoreflect.EnumType {
	return &file_httpoptions_annotations_proto_enumTypes[0]
}

func (x ApiSourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiSourceType.Descriptor instead.
func (ApiSourceType) EnumDescriptor() ([]byte, []int) {
	return file_httpoptions_annotations_proto_rawDescGZIP(), []int{0}
}

type AuthTokenType int32

const (
	AuthTokenType_EASE_AUTH_TOKEN   AuthTokenType = 0
	AuthTokenType_BASE_ACCESS_TOKEN AuthTokenType = 1
)

// Enum value maps for AuthTokenType.
var (
	AuthTokenType_name = map[int32]string{
		0: "EASE_AUTH_TOKEN",
		1: "BASE_ACCESS_TOKEN",
	}
	AuthTokenType_value = map[string]int32{
		"EASE_AUTH_TOKEN":   0,
		"BASE_ACCESS_TOKEN": 1,
	}
)

func (x AuthTokenType) Enum() *AuthTokenType {
	p := new(AuthTokenType)
	*p = x
	return p
}

func (x AuthTokenType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthTokenType) Descriptor() protoreflect.EnumDescriptor {
	return file_httpoptions_annotations_proto_enumTypes[1].Descriptor()
}

func (AuthTokenType) Type() protoreflect.EnumType {
	return &file_httpoptions_annotations_proto_enumTypes[1]
}

func (x AuthTokenType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthTokenType.Descriptor instead.
func (AuthTokenType) EnumDescriptor() ([]byte, []int) {
	return file_httpoptions_annotations_proto_rawDescGZIP(), []int{1}
}

type SpecSourceType int32

const (
	SpecSourceType_UNSPECIFIED SpecSourceType = 0
	SpecSourceType_WEB         SpecSourceType = 1
)

// Enum value maps for SpecSourceType.
var (
	SpecSourceType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "WEB",
	}
	SpecSourceType_value = map[string]int32{
		"UNSPECIFIED": 0,
		"WEB":         1,
	}
)

func (x SpecSourceType) Enum() *SpecSourceType {
	p := new(SpecSourceType)
	*p = x
	return p
}

func (x SpecSourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpecSourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_httpoptions_annotations_proto_enumTypes[2].Descriptor()
}

func (SpecSourceType) Type() protoreflect.EnumType {
	return &file_httpoptions_annotations_proto_enumTypes[2]
}

func (x SpecSourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpecSourceType.Descriptor instead.
func (SpecSourceType) EnumDescriptor() ([]byte, []int) {
	return file_httpoptions_annotations_proto_rawDescGZIP(), []int{2}
}

type LoadBalancer int32

const (
	LoadBalancer_ROUND_ROBIN LoadBalancer = 0
	LoadBalancer_CONSISTENT  LoadBalancer = 1
)

// Enum value maps for LoadBalancer.
var (
	LoadBalancer_name = map[int32]string{
		0: "ROUND_ROBIN",
		1: "CONSISTENT",
	}
	LoadBalancer_value = map[string]int32{
		"ROUND_ROBIN": 0,
		"CONSISTENT":  1,
	}
)

func (x LoadBalancer) Enum() *LoadBalancer {
	p := new(LoadBalancer)
	*p = x
	return p
}

func (x LoadBalancer) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoadBalancer) Descriptor() protoreflect.EnumDescriptor {
	return file_httpoptions_annotations_proto_enumTypes[3].Descriptor()
}

func (LoadBalancer) Type() protoreflect.EnumType {
	return &file_httpoptions_annotations_proto_enumTypes[3]
}

func (x LoadBalancer) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoadBalancer.Descriptor instead.
func (LoadBalancer) EnumDescriptor() ([]byte, []int) {
	return file_httpoptions_annotations_proto_rawDescGZIP(), []int{3}
}

type OperatorType int32

const (
	OperatorType_OPERATOR_TYPE_UNKNOWN OperatorType = 0
	OperatorType_GT                    OperatorType = 1
	OperatorType_LT                    OperatorType = 2
	OperatorType_EQ                    OperatorType = 3
	OperatorType_MATCH                 OperatorType = 4
	OperatorType_NON_NIL               OperatorType = 5
	OperatorType_LEN_GT                OperatorType = 6
	OperatorType_LEN_LT                OperatorType = 7
	OperatorType_LEN_EQ                OperatorType = 8
)

// Enum value maps for OperatorType.
var (
	OperatorType_name = map[int32]string{
		0: "OPERATOR_TYPE_UNKNOWN",
		1: "GT",
		2: "LT",
		3: "EQ",
		4: "MATCH",
		5: "NON_NIL",
		6: "LEN_GT",
		7: "LEN_LT",
		8: "LEN_EQ",
	}
	OperatorType_value = map[string]int32{
		"OPERATOR_TYPE_UNKNOWN": 0,
		"GT":                    1,
		"LT":                    2,
		"EQ":                    3,
		"MATCH":                 4,
		"NON_NIL":               5,
		"LEN_GT":                6,
		"LEN_LT":                7,
		"LEN_EQ":                8,
	}
)

func (x OperatorType) Enum() *OperatorType {
	p := new(OperatorType)
	*p = x
	return p
}

func (x OperatorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperatorType) Descriptor() protoreflect.EnumDescriptor {
	return file_httpoptions_annotations_proto_enumTypes[4].Descriptor()
}

func (OperatorType) Type() protoreflect.EnumType {
	return &file_httpoptions_annotations_proto_enumTypes[4]
}

func (x OperatorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperatorType.Descriptor instead.
func (OperatorType) EnumDescriptor() ([]byte, []int) {
	return file_httpoptions_annotations_proto_rawDescGZIP(), []int{4}
}

type FunctionType int32

const (
	FunctionType_FUNCTION_TYPE_UNKNOWN FunctionType = 0
	FunctionType_TRIM                  FunctionType = 1
)

// Enum value maps for FunctionType.
var (
	FunctionType_name = map[int32]string{
		0: "FUNCTION_TYPE_UNKNOWN",
		1: "TRIM",
	}
	FunctionType_value = map[string]int32{
		"FUNCTION_TYPE_UNKNOWN": 0,
		"TRIM":                  1,
	}
)

func (x FunctionType) Enum() *FunctionType {
	p := new(FunctionType)
	*p = x
	return p
}

func (x FunctionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FunctionType) Descriptor() protoreflect.EnumDescriptor {
	return file_httpoptions_annotations_proto_enumTypes[5].Descriptor()
}

func (FunctionType) Type() protoreflect.EnumType {
	return &file_httpoptions_annotations_proto_enumTypes[5]
}

func (x FunctionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FunctionType.Descriptor instead.
func (FunctionType) EnumDescriptor() ([]byte, []int) {
	return file_httpoptions_annotations_proto_rawDescGZIP(), []int{5}
}

type ValueType int32

const (
	ValueType_VALUE_TYPE_UNKNOWN ValueType = 0
	ValueType_NUMBER             ValueType = 1
	ValueType_STRING             ValueType = 2
	ValueType_OBJ                ValueType = 3
)

// Enum value maps for ValueType.
var (
	ValueType_name = map[int32]string{
		0: "VALUE_TYPE_UNKNOWN",
		1: "NUMBER",
		2: "STRING",
		3: "OBJ",
	}
	ValueType_value = map[string]int32{
		"VALUE_TYPE_UNKNOWN": 0,
		"NUMBER":             1,
		"STRING":             2,
		"OBJ":                3,
	}
)

func (x ValueType) Enum() *ValueType {
	p := new(ValueType)
	*p = x
	return p
}

func (x ValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_httpoptions_annotations_proto_enumTypes[6].Descriptor()
}

func (ValueType) Type() protoreflect.EnumType {
	return &file_httpoptions_annotations_proto_enumTypes[6]
}

func (x ValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValueType.Descriptor instead.
func (ValueType) EnumDescriptor() ([]byte, []int) {
	return file_httpoptions_annotations_proto_rawDescGZIP(), []int{6}
}

type ApiMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginNotRequired   bool           `protobuf:"varint,1,opt,name=login_not_required,json=loginNotRequired,proto3" json:"login_not_required,omitempty"`
	ClientSignRequired bool           `protobuf:"varint,2,opt,name=client_sign_required,json=clientSignRequired,proto3" json:"client_sign_required,omitempty"`
	HashKey            string         `protobuf:"bytes,3,opt,name=hash_key,json=hashKey,proto3" json:"hash_key,omitempty"`
	IsThirdParty       bool           `protobuf:"varint,4,opt,name=is_third_party,json=isThirdParty,proto3" json:"is_third_party,omitempty"`
	Timeout            string         `protobuf:"bytes,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
	ApiSource          ApiSourceType  `protobuf:"varint,6,opt,name=api_source,json=apiSource,proto3,enum=janus.api.ApiSourceType" json:"api_source,omitempty"`
	TokenType          AuthTokenType  `protobuf:"varint,7,opt,name=token_type,json=tokenType,proto3,enum=janus.api.AuthTokenType" json:"token_type,omitempty"`
	SpecSourceType     SpecSourceType `protobuf:"varint,8,opt,name=spec_source_type,json=specSourceType,proto3,enum=janus.api.SpecSourceType" json:"spec_source_type,omitempty"`
}

func (x *ApiMethod) Reset() {
	*x = ApiMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_httpoptions_annotations_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiMethod) ProtoMessage() {}

func (x *ApiMethod) ProtoReflect() protoreflect.Message {
	mi := &file_httpoptions_annotations_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiMethod.ProtoReflect.Descriptor instead.
func (*ApiMethod) Descriptor() ([]byte, []int) {
	return file_httpoptions_annotations_proto_rawDescGZIP(), []int{0}
}

func (x *ApiMethod) GetLoginNotRequired() bool {
	if x != nil {
		return x.LoginNotRequired
	}
	return false
}

func (x *ApiMethod) GetClientSignRequired() bool {
	if x != nil {
		return x.ClientSignRequired
	}
	return false
}

func (x *ApiMethod) GetHashKey() string {
	if x != nil {
		return x.HashKey
	}
	return ""
}

func (x *ApiMethod) GetIsThirdParty() bool {
	if x != nil {
		return x.IsThirdParty
	}
	return false
}

func (x *ApiMethod) GetTimeout() string {
	if x != nil {
		return x.Timeout
	}
	return ""
}

func (x *ApiMethod) GetApiSource() ApiSourceType {
	if x != nil {
		return x.ApiSource
	}
	return ApiSourceType_EASE_GATEWAY
}

func (x *ApiMethod) GetTokenType() AuthTokenType {
	if x != nil {
		return x.TokenType
	}
	return AuthTokenType_EASE_AUTH_TOKEN
}

func (x *ApiMethod) GetSpecSourceType() SpecSourceType {
	if x != nil {
		return x.SpecSourceType
	}
	return SpecSourceType_UNSPECIFIED
}

type ServiceSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId     data.ServiceId `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3,enum=data.ServiceId" json:"service_id,omitempty"`
	PortName      string         `protobuf:"bytes,2,opt,name=port_name,json=portName,proto3" json:"port_name,omitempty"`
	Namespace     string         `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	GenController bool           `protobuf:"varint,4,opt,name=gen_controller,json=genController,proto3" json:"gen_controller,omitempty"`
	Balancer      LoadBalancer   `protobuf:"varint,5,opt,name=balancer,proto3,enum=janus.api.LoadBalancer" json:"balancer,omitempty"`
}

func (x *ServiceSpec) Reset() {
	*x = ServiceSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_httpoptions_annotations_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceSpec) ProtoMessage() {}

func (x *ServiceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_httpoptions_annotations_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceSpec.ProtoReflect.Descriptor instead.
func (*ServiceSpec) Descriptor() ([]byte, []int) {
	return file_httpoptions_annotations_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceSpec) GetServiceId() data.ServiceId {
	if x != nil {
		return x.ServiceId
	}
	return data.ServiceId(0)
}

func (x *ServiceSpec) GetPortName() string {
	if x != nil {
		return x.PortName
	}
	return ""
}

func (x *ServiceSpec) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ServiceSpec) GetGenController() bool {
	if x != nil {
		return x.GenController
	}
	return false
}

func (x *ServiceSpec) GetBalancer() LoadBalancer {
	if x != nil {
		return x.Balancer
	}
	return LoadBalancer_ROUND_ROBIN
}

type ValidationRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator OperatorType `protobuf:"varint,1,opt,name=operator,proto3,enum=janus.api.OperatorType" json:"operator,omitempty"`
	Type     ValueType    `protobuf:"varint,2,opt,name=type,proto3,enum=janus.api.ValueType" json:"type,omitempty"`
	Value    string       `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Function FunctionType `protobuf:"varint,4,opt,name=function,proto3,enum=janus.api.FunctionType" json:"function,omitempty"`
}

func (x *ValidationRule) Reset() {
	*x = ValidationRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_httpoptions_annotations_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidationRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationRule) ProtoMessage() {}

func (x *ValidationRule) ProtoReflect() protoreflect.Message {
	mi := &file_httpoptions_annotations_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationRule.ProtoReflect.Descriptor instead.
func (*ValidationRule) Descriptor() ([]byte, []int) {
	return file_httpoptions_annotations_proto_rawDescGZIP(), []int{2}
}

func (x *ValidationRule) GetOperator() OperatorType {
	if x != nil {
		return x.Operator
	}
	return OperatorType_OPERATOR_TYPE_UNKNOWN
}

func (x *ValidationRule) GetType() ValueType {
	if x != nil {
		return x.Type
	}
	return ValueType_VALUE_TYPE_UNKNOWN
}

func (x *ValidationRule) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ValidationRule) GetFunction() FunctionType {
	if x != nil {
		return x.Function
	}
	return FunctionType_FUNCTION_TYPE_UNKNOWN
}

type ValidationRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules []*ValidationRule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *ValidationRules) Reset() {
	*x = ValidationRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_httpoptions_annotations_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidationRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationRules) ProtoMessage() {}

func (x *ValidationRules) ProtoReflect() protoreflect.Message {
	mi := &file_httpoptions_annotations_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationRules.ProtoReflect.Descriptor instead.
func (*ValidationRules) Descriptor() ([]byte, []int) {
	return file_httpoptions_annotations_proto_rawDescGZIP(), []int{3}
}

func (x *ValidationRules) GetRules() []*ValidationRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

var file_httpoptions_annotations_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*HttpRule)(nil),
		Field:         108345,
		Name:          "janus.api.http",
		Tag:           "bytes,108345,opt,name=http",
		Filename:      "httpoptions/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*ApiMethod)(nil),
		Field:         108361,
		Name:          "janus.api.method",
		Tag:           "bytes,108361,opt,name=method",
		Filename:      "httpoptions/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*ServiceSpec)(nil),
		Field:         108349,
		Name:          "janus.api.service_spec",
		Tag:           "bytes,108349,opt,name=service_spec",
		Filename:      "httpoptions/annotations.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*ValidationRules)(nil),
		Field:         108102,
		Name:          "janus.api.rules",
		Tag:           "bytes,108102,opt,name=rules",
		Filename:      "httpoptions/annotations.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional janus.api.HttpRule http = 108345;
	E_Http = &file_httpoptions_annotations_proto_extTypes[0]
	// optional janus.api.ApiMethod method = 108361;
	E_Method = &file_httpoptions_annotations_proto_extTypes[1]
)

// Extension fields to descriptorpb.ServiceOptions.
var (
	// optional janus.api.ServiceSpec service_spec = 108349;
	E_ServiceSpec = &file_httpoptions_annotations_proto_extTypes[2]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// optional janus.api.ValidationRules rules = 108102;
	E_Rules = &file_httpoptions_annotations_proto_extTypes[3]
)

var File_httpoptions_annotations_proto protoreflect.FileDescriptor

var file_httpoptions_annotations_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x68, 0x74, 0x74, 0x70, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x68, 0x74, 0x74,
	0x70, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfa, 0x02, 0x0a, 0x09, 0x41,
	0x70, 0x69, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x6f, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68,
	0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x54,
	0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x41, 0x70, 0x69, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x09, 0x61, 0x70, 0x69, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x10, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x65, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd3, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x52, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x72, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x67, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x67, 0x65, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x08, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x65, 0x61,
	0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x72, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x22, 0xb7, 0x01,
	0x0a, 0x0e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x32, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x61, 0x73, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2a, 0x33, 0x0a, 0x0d, 0x41, 0x70,
	0x69, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x45,
	0x41, 0x53, 0x45, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x10, 0x01, 0x2a,
	0x3b, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x54, 0x4f,
	0x4b, 0x45, 0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x41, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x01, 0x2a, 0x2a, 0x0a, 0x0e,
	0x53, 0x70, 0x65, 0x63, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f,
	0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x57, 0x45, 0x42, 0x10, 0x01, 0x2a, 0x2f, 0x0a, 0x0c, 0x4c, 0x6f, 0x61, 0x64,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x4f, 0x55, 0x4e,
	0x44, 0x5f, 0x52, 0x4f, 0x42, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4e,
	0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x2a, 0x7d, 0x0a, 0x0c, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x50, 0x45,
	0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x54, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02,
	0x4c, 0x54, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x51, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05,
	0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x4e, 0x5f, 0x4e,
	0x49, 0x4c, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x45, 0x4e, 0x5f, 0x47, 0x54, 0x10, 0x06,
	0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x45, 0x4e, 0x5f, 0x4c, 0x54, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06,
	0x4c, 0x45, 0x4e, 0x5f, 0x45, 0x51, 0x10, 0x08, 0x2a, 0x33, 0x0a, 0x0c, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x55, 0x4e, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x52, 0x49, 0x4d, 0x10, 0x01, 0x2a, 0x44, 0x0a,
	0x09, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x56, 0x41,
	0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x42,
	0x4a, 0x10, 0x03, 0x3a, 0x48, 0x0a, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x1e, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb9, 0xce, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48,
	0x74, 0x74, 0x70, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x4d, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xc9, 0xce, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x70, 0x69, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x3a, 0x5b, 0x0a, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x12, 0x1f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbd, 0xce,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x3a, 0x50, 0x0a, 0x05, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xc6, 0xcc, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x61, 0x73, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x42, 0x67, 0x0a, 0x0c, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x10, 0x41, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x6e, 0x63,
	0x68, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x2f, 0x65, 0x61, 0x73, 0x65, 0x2d, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x3b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0xa2, 0x02, 0x04,
	0x45, 0x41, 0x50, 0x49, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_httpoptions_annotations_proto_rawDescOnce sync.Once
	file_httpoptions_annotations_proto_rawDescData = file_httpoptions_annotations_proto_rawDesc
)

func file_httpoptions_annotations_proto_rawDescGZIP() []byte {
	file_httpoptions_annotations_proto_rawDescOnce.Do(func() {
		file_httpoptions_annotations_proto_rawDescData = protoimpl.X.CompressGZIP(file_httpoptions_annotations_proto_rawDescData)
	})
	return file_httpoptions_annotations_proto_rawDescData
}

var file_httpoptions_annotations_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_httpoptions_annotations_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_httpoptions_annotations_proto_goTypes = []interface{}{
	(ApiSourceType)(0),                  // 0: janus.api.ApiSourceType
	(AuthTokenType)(0),                  // 1: janus.api.AuthTokenType
	(SpecSourceType)(0),                 // 2: janus.api.SpecSourceType
	(LoadBalancer)(0),                   // 3: janus.api.LoadBalancer
	(OperatorType)(0),                   // 4: janus.api.OperatorType
	(FunctionType)(0),                   // 5: janus.api.FunctionType
	(ValueType)(0),                      // 6: janus.api.ValueType
	(*ApiMethod)(nil),                   // 7: janus.api.ApiMethod
	(*ServiceSpec)(nil),                 // 8: janus.api.ServiceSpec
	(*ValidationRule)(nil),              // 9: janus.api.ValidationRule
	(*ValidationRules)(nil),             // 10: janus.api.ValidationRules
	(data.ServiceId)(0),                 // 11: data.ServiceId
	(*descriptorpb.MethodOptions)(nil),  // 12: google.protobuf.MethodOptions
	(*descriptorpb.ServiceOptions)(nil), // 13: google.protobuf.ServiceOptions
	(*descriptorpb.FieldOptions)(nil),   // 14: google.protobuf.FieldOptions
	(*HttpRule)(nil),                    // 15: janus.api.HttpRule
}
var file_httpoptions_annotations_proto_depIdxs = []int32{
	0,  // 0: janus.api.ApiMethod.api_source:type_name -> janus.api.ApiSourceType
	1,  // 1: janus.api.ApiMethod.token_type:type_name -> janus.api.AuthTokenType
	2,  // 2: janus.api.ApiMethod.spec_source_type:type_name -> janus.api.SpecSourceType
	11, // 3: janus.api.ServiceSpec.service_id:type_name -> data.ServiceId
	3,  // 4: janus.api.ServiceSpec.balancer:type_name -> janus.api.LoadBalancer
	4,  // 5: janus.api.ValidationRule.operator:type_name -> janus.api.OperatorType
	6,  // 6: janus.api.ValidationRule.type:type_name -> janus.api.ValueType
	5,  // 7: janus.api.ValidationRule.function:type_name -> janus.api.FunctionType
	9,  // 8: janus.api.ValidationRules.rules:type_name -> janus.api.ValidationRule
	12, // 9: janus.api.http:extendee -> google.protobuf.MethodOptions
	12, // 10: janus.api.method:extendee -> google.protobuf.MethodOptions
	13, // 11: janus.api.service_spec:extendee -> google.protobuf.ServiceOptions
	14, // 12: janus.api.rules:extendee -> google.protobuf.FieldOptions
	15, // 13: janus.api.http:type_name -> janus.api.HttpRule
	7,  // 14: janus.api.method:type_name -> janus.api.ApiMethod
	8,  // 15: janus.api.service_spec:type_name -> janus.api.ServiceSpec
	10, // 16: janus.api.rules:type_name -> janus.api.ValidationRules
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	13, // [13:17] is the sub-list for extension type_name
	9,  // [9:13] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_httpoptions_annotations_proto_init() }
func file_httpoptions_annotations_proto_init() {
	if File_httpoptions_annotations_proto != nil {
		return
	}
	file_httpoptions_http_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_httpoptions_annotations_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_httpoptions_annotations_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_httpoptions_annotations_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidationRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_httpoptions_annotations_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidationRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_httpoptions_annotations_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   4,
			NumExtensions: 4,
			NumServices:   0,
		},
		GoTypes:           file_httpoptions_annotations_proto_goTypes,
		DependencyIndexes: file_httpoptions_annotations_proto_depIdxs,
		EnumInfos:         file_httpoptions_annotations_proto_enumTypes,
		MessageInfos:      file_httpoptions_annotations_proto_msgTypes,
		ExtensionInfos:    file_httpoptions_annotations_proto_extTypes,
	}.Build()
	File_httpoptions_annotations_proto = out.File
	file_httpoptions_annotations_proto_rawDesc = nil
	file_httpoptions_annotations_proto_goTypes = nil
	file_httpoptions_annotations_proto_depIdxs = nil
}
